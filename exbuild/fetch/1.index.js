(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./pkg/fetch.js":
/*!**********************!*\
  !*** ./pkg/fetch.js ***!
  \**********************/
/*! exports provided: run, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize, __wbindgen_string_new, __wbindgen_object_clone_ref, __widl_f_set_Headers, __widl_f_new_with_str_and_init_Request, __widl_f_headers_Request, __widl_instanceof_Response, __widl_f_json_Response, __widl_instanceof_Window, __widl_f_fetch_with_request_Window, __wbindgen_cb_drop, __wbg_set_fd7fb54eff908a40, __wbg_newnoargs_3b5b9eb6cc86e4f9, __wbg_call_90045f2b8d244177, __wbg_call_00ca88af7ddffcb2, __wbg_new_036f96d18aa1946d, __wbg_new_9c838f4359f58c31, __wbg_resolve_64b892034de12a92, __wbg_then_e661fbb3e525051f, __wbg_then_738618880d2fe788, __wbindgen_debug_string, __wbindgen_throw, __wbindgen_closure_wrapper937 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(TextDecoder, TextEncoder) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"run\", function() { return run; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return __wbindgen_json_parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return __wbindgen_json_serialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_string_new\", function() { return __wbindgen_string_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_clone_ref\", function() { return __wbindgen_object_clone_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_set_Headers\", function() { return __widl_f_set_Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_new_with_str_and_init_Request\", function() { return __widl_f_new_with_str_and_init_Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_headers_Request\", function() { return __widl_f_headers_Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_instanceof_Response\", function() { return __widl_instanceof_Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_json_Response\", function() { return __widl_f_json_Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_instanceof_Window\", function() { return __widl_instanceof_Window; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__widl_f_fetch_with_request_Window\", function() { return __widl_f_fetch_with_request_Window; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_cb_drop\", function() { return __wbindgen_cb_drop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_fd7fb54eff908a40\", function() { return __wbg_set_fd7fb54eff908a40; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newnoargs_3b5b9eb6cc86e4f9\", function() { return __wbg_newnoargs_3b5b9eb6cc86e4f9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_90045f2b8d244177\", function() { return __wbg_call_90045f2b8d244177; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_00ca88af7ddffcb2\", function() { return __wbg_call_00ca88af7ddffcb2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_036f96d18aa1946d\", function() { return __wbg_new_036f96d18aa1946d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_9c838f4359f58c31\", function() { return __wbg_new_9c838f4359f58c31; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_resolve_64b892034de12a92\", function() { return __wbg_resolve_64b892034de12a92; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_then_e661fbb3e525051f\", function() { return __wbg_then_e661fbb3e525051f; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_then_738618880d2fe788\", function() { return __wbg_then_738618880d2fe788; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_debug_string\", function() { return __wbindgen_debug_string; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_closure_wrapper937\", function() { return __wbindgen_closure_wrapper937; });\n/* harmony import */ var _fetch_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch_bg */ \"./pkg/fetch_bg.wasm\");\n\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @returns {any}\n*/\nfunction run() {\n    return takeObject(_fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"run\"]());\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet passStringToWasm;\nif (typeof cachedTextEncoder.encodeInto === 'function') {\n    passStringToWasm = function(arg) {\n\n\n        if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n        let size = arg.length;\n        let ptr = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            arg = arg.slice(offset);\n            ptr = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"](ptr, size, size = offset + arg.length * 3);\n            const view = getUint8Memory().subarray(ptr + offset, ptr + size);\n            const ret = cachedTextEncoder.encodeInto(arg, view);\n            if (ret.read != arg.length) throw new Error('failed to pass whole string');\n            offset += ret.written;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n} else {\n    passStringToWasm = function(arg) {\n\n\n        if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n        let size = arg.length;\n        let ptr = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](size);\n        let offset = 0;\n        {\n            const mem = getUint8Memory();\n            for (; offset < arg.length; offset++) {\n                const code = arg.charCodeAt(offset);\n                if (code > 0x7F) break;\n                mem[ptr + offset] = code;\n            }\n        }\n\n        if (offset !== arg.length) {\n            const buf = cachedTextEncoder.encode(arg.slice(offset));\n            ptr = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"](ptr, size, size = offset + buf.length);\n            getUint8Memory().set(buf, ptr + offset);\n            offset += buf.length;\n        }\n        WASM_VECTOR_LEN = offset;\n        return ptr;\n    };\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory = new Uint32Array(_fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction handleError(e) {\n    _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_exn_store\"](addHeapObject(e));\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst __wbindgen_object_drop_ref = function(arg0) {\n    try {\n        takeObject(arg0);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_json_parse = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        return addHeapObject(JSON.parse(varg0));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_json_serialize = function(ret, arg0) {\n    try {\n\n        const retptr = passStringToWasm(JSON.stringify(getObject(arg0)));\n        const retlen = WASM_VECTOR_LEN;\n        const mem = getUint32Memory();\n        mem[ret / 4] = retptr;\n        mem[ret / 4 + 1] = retlen;\n\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_string_new = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        return addHeapObject(varg0);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_object_clone_ref = function(arg0) {\n    try {\n        return addHeapObject(getObject(arg0));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __widl_f_set_Headers = function(arg0, arg1, arg2, arg3, arg4) {\n    let varg1 = getStringFromWasm(arg1, arg2);\n    let varg3 = getStringFromWasm(arg3, arg4);\n    try {\n        getObject(arg0).set(varg1, varg3);\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __widl_f_new_with_str_and_init_Request = function(arg0, arg1, arg2) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        return addHeapObject(new Request(varg0, getObject(arg2)));\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __widl_f_headers_Request = function(arg0) {\n    try {\n        return addHeapObject(getObject(arg0).headers);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __widl_instanceof_Response = function(arg0) {\n    try {\n        return getObject(arg0) instanceof Response;\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __widl_f_json_Response = function(arg0) {\n    try {\n        return addHeapObject(getObject(arg0).json());\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __widl_instanceof_Window = function(arg0) {\n    try {\n        return getObject(arg0) instanceof Window;\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __widl_f_fetch_with_request_Window = function(arg0, arg1) {\n    try {\n        return addHeapObject(getObject(arg0).fetch(getObject(arg1)));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_cb_drop = function(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    try {\n        return false;\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbg_set_fd7fb54eff908a40 = function(arg0, arg1, arg2) {\n    try {\n        return Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __wbg_newnoargs_3b5b9eb6cc86e4f9 = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        return addHeapObject(new Function(varg0));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbg_call_90045f2b8d244177 = function(arg0, arg1) {\n    try {\n        return addHeapObject(getObject(arg0).call(getObject(arg1)));\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __wbg_call_00ca88af7ddffcb2 = function(arg0, arg1, arg2) {\n    try {\n        return addHeapObject(getObject(arg0).call(getObject(arg1), getObject(arg2)));\n    } catch (e) {\n        handleError(e);\n    }\n};\n\nconst __wbg_new_036f96d18aa1946d = function() {\n    try {\n        return addHeapObject(new Object());\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbg_new_9c838f4359f58c31 = function(arg0, arg1) {\n    let cbarg0 = function(arg0, arg1) {\n        let a = this.a;\n        this.a = 0;\n        try {\n            return this.f(a, this.b, addHeapObject(arg0), addHeapObject(arg1));\n\n        } finally {\n            this.a = a;\n\n        }\n\n    };\n    cbarg0.f = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_function_table\"].get(62);\n    cbarg0.a = arg0;\n    cbarg0.b = arg1;\n    try {\n        try {\n            return addHeapObject(new Promise(cbarg0.bind(cbarg0)));\n        } catch (e) {\n            let error = (function () {\n                try {\n                    return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n                } catch(_) {\n                    return \"<failed to stringify thrown value>\";\n                }\n            }());\n            console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n            throw e;\n        }\n    } finally {\n        cbarg0.a = cbarg0.b = 0;\n\n    }\n};\n\nconst __wbg_resolve_64b892034de12a92 = function(arg0) {\n    try {\n        return addHeapObject(Promise.resolve(getObject(arg0)));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbg_then_e661fbb3e525051f = function(arg0, arg1) {\n    try {\n        return addHeapObject(getObject(arg0).then(getObject(arg1)));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbg_then_738618880d2fe788 = function(arg0, arg1, arg2) {\n    try {\n        return addHeapObject(getObject(arg0).then(getObject(arg1), getObject(arg2)));\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_debug_string = function(ret, arg0) {\n    try {\n\n        const retptr = passStringToWasm(debugString(getObject(arg0)));\n        const retlen = WASM_VECTOR_LEN;\n        const mem = getUint32Memory();\n        mem[ret / 4] = retptr;\n        mem[ret / 4 + 1] = retlen;\n\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    try {\n        throw new Error(varg0);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\nconst __wbindgen_closure_wrapper937 = function(arg0, arg1, arg2) {\n\n    const f = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_function_table\"].get(41);\n    const d = _fetch_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_function_table\"].get(42);\n    const b = arg1;\n    const cb = function(arg0) {\n        this.cnt++;\n        let a = this.a;\n        this.a = 0;\n        try {\n            return f(a, b, addHeapObject(arg0));\n\n        } finally {\n            if (--this.cnt === 0) d(a, b);\n            else this.a = a;\n\n        }\n\n    };\n    cb.a = arg0;\n    cb.cnt = 1;\n    let real = cb.bind(cb);\n    real.original = cb;\n\n    try {\n        return addHeapObject(real);\n    } catch (e) {\n        let error = (function () {\n            try {\n                return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n            } catch(_) {\n                return \"<failed to stringify thrown value>\";\n            }\n        }());\n        console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n        throw e;\n    }\n};\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! text-encoding */ \"../../node_modules/text-encoding/index.js\")[\"TextDecoder\"], __webpack_require__(/*! text-encoding */ \"../../node_modules/text-encoding/index.js\")[\"TextEncoder\"]))\n\n//# sourceURL=webpack:///./pkg/fetch.js?");

/***/ }),

/***/ "./pkg/fetch_bg.wasm":
/*!***************************!*\
  !*** ./pkg/fetch_bg.wasm ***!
  \***************************/
/*! exports provided: memory, run, __rustc_debug_gdb_scripts_section__, __wbindgen_exn_store, __wbindgen_malloc, __wbindgen_realloc, __wbg_function_table */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./fetch.js */ \"./pkg/fetch.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./pkg/fetch_bg.wasm?");

/***/ })

}]);